trigger:
    branches:
        include:
            - master

    paths:
        include:
            - ui_1
            - ui_2
            - ui_next

pool:
    name: 'Default'

jobs:

- job: first_project_ui_job
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '18.x'
    displayName: 'Install Node.js'

  - task: NodeTool@0
    inputs:
      versionSpec: '18.x'
    displayName: 'Install dependancies'

  - script: |
      cd ui_1
      npm ci
    displayName: 'NPM CI'

  - task: NodeTool@0
    inputs:
      versionSpec: '18.x'
    displayName: 'Run project build'

  - script: |
      cd ui_1
      npm run build
    displayName: 'NPM RUN BUILD for first ui project'

  - task: ArchiveFiles@2
    displayName: 'Archive UI build files'  
    condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
    inputs:
      rootFolderOrFile: '$(Build.SourcesDirectory)/ui_1/dist'
      includeRootFolder: false
      archiveFile: '$(Build.ArtifactDirectory)/$(Build.BuildId).zip'
      archiveType: 'zip'
      replaceExistingArchive: true

  - task: PublishPipelineArtifact@1
    displayName: 'Publish UI artifact'
    condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
    inputs:
      targetPath: '$(Build.ArtifactDirectory)/$(Build.BuildId).zip'
      artifact: 'ui_artifact'

- job: second_project_ui_job
  steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '18.x'
      displayName: 'Install Node.js'

    - task: NodeTool@0
      inputs:
        versionSpec: '18.x'
      displayName: 'Install API dependencies'

    - script: |
        cd ui_2
        npm ci
      displayName: 'NPM CI for API'

    - task: NodeTool@0
      inputs:
        versionSpec: '18.x'
      displayName: 'Run project build'

    - script: |
        cd ui_2
        npm run build
      displayName: 'NPM RUN BUILD for second ui project'

    - task: ArchiveFiles@2
      displayName: 'Archive API build files'  
      condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
      inputs:
        rootFolderOrFile: '$(Build.SourcesDirectory)/ui_2/dist'
        includeRootFolder: false
        archiveFile: '$(Build.ArtifactDirectory)/$(Build.BuildId)_api.zip'
        archiveType: 'zip'
        replaceExistingArchive: true

    - task: PublishPipelineArtifact@1
      displayName: 'Publish API artifact'
      condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
      inputs:
        targetPath: '$(Build.ArtifactDirectory)/$(Build.BuildId)_api.zip'
        artifact: 'api_artifact'


- job: next_project_ui_job

  steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '18.x'
      displayName: 'Install Node.js'

    - script: |
        cd ui_next
        npm ci
      displayName: 'npm ci'

    - task: NodeTool@0
      inputs:
        versionSpec: '18.x'
      displayName: 'Build next ui'

    - script: |
        cd ui_next
        dir
        npm run build
      displayName: 'npm run build'

    - task: ArchiveFiles@2
      displayName: 'Archive next ui build files'
      inputs:
        rootFolderOrFile: '$(Build.SourcesDirectory)/ui_next/out'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        replaceExistingArchive: true

    - task: PublishPipelineArtifact@1
      displayName: 'Publish ui artifact'
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        artifact: 'next_ui_job'

    - script: |
        cd ui/out
        ls -la
      displayName: 'List the files inside the out folder'